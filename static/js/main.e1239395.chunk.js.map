{"version":3,"sources":["lib/primitives/Box/index.js","styles/Helpers.js","lib/primitives/Button/index.js","lib/primitives/Flex/index.js","lib/primitives/Grid/index.js","lib/primitives/Input/index.js","lib/primitives/Text/index.js","lib/primitives/index.js","components/Dictionary/styles.js","components/Dictionary/index.js","containers/DictionaryContainer/index.js","App.js","styles/GlobalStyle.js","styles/Colors/index.js","styles/index.js","index.js"],"names":["Box","styled","div","background","border","color","layout","position","shadow","space","NoSelect","css","defaultTo","Button","typography","props","theme","colors","grey2","textPrimary","height","width","grey4","grey6","defaultProps","boxShadow","Flex","flexbox","displayName","Grid","grid","propTypes","variant","string","NormalInputStyle","grey8","OutlinedInputStyle","grey9","blue5","Input","input","grey10","backgroundColor","Text","Example","Primitives","Synonyms","Dictionary","onChange","onClick","onSearch","flexDirection","margin","bg","borderRadius","lineHeight","fontSize","style","textIndent","marginTop","pt","pl","pr","event","target","value","alignSelf","listStyle","map","word","index","key","fontWeight","phonetic","meaning","noun","fontStyle","entry","definition","example","synonyms","display","verb","adjective","adverb","abbreviation","DictionaryContainer","searchWord","url","state","wordsearch","laungage","axios","get","then","response","data","setState","wordresponse","this","Fragment","newSearch","Component","App","exact","path","component","defaultFont","GlobalStyles","createGlobalStyle","Colors","listItemColor","listItemColorLight","white","black","red1","red2","red3","red4","red5","red6","red7","red8","red9","purple1","purple2","purple3","purple4","purple5","purple6","purple7","purple8","purple9","orange1","orange2","orange3","orange4","orange5","orange6","orange7","orange8","orange9","blue1","blue2","blue3","blue4","blue6","blue7","blue8","blue9","green1","green2","green3","green4","green5","green6","green7","green8","green9","grey1","grey3","grey5","grey7","grey11","grey12","grey13","Theme","breakpoints","primary","success","warning","error","fontFamily","fontSizes","lineHeights","shadows","ReactDOM","render","GlobalStyle","document","getElementById"],"mappings":"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","file":"static/js/main.e1239395.chunk.js","sourcesContent":["import styled from \"styled-components\"\r\nimport {\r\n  background,\r\n  border,\r\n  color,\r\n  layout,\r\n  position,\r\n  space,\r\n  shadow\r\n} from \"styled-system\"\r\n\r\nconst Box = styled.div`\r\n  box-sizing: border-box;\r\n  ${background};\r\n  ${border};\r\n  ${color};\r\n  ${layout};\r\n  ${position};\r\n  ${shadow};\r\n  ${space};\r\n`\r\n\r\nexport default Box\r\n","import { css } from \"styled-components\"\r\nimport { defaultTo } from \"ramda\"\r\n\r\nexport const NoSelect = css`\r\n  user-select: none;\r\n  text-decoration: none;\r\n  -webkit-user-select: none; /* webkit (safari, chrome) browsers */\r\n  -moz-user-select: none; /* mozilla browsers */\r\n  -ms-user-select: none; /* IE10+ */\r\n`\r\n\r\nexport const defaultToNone = defaultTo(\"none\")\r\n","import styled from \"styled-components\"\r\nimport { layout, shadow, typography } from \"styled-system\"\r\nimport { NoSelect } from \"styles/Helpers\"\r\n\r\nconst defaultProps = {\r\n  boxShadow: 1,\r\n  height: \"30px\",\r\n  width: \"auto\"\r\n}\r\n\r\nconst Button = styled.div`\r\n  ${layout};\r\n  ${shadow};\r\n  ${typography};\r\n  ${NoSelect};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${props => props.theme.colors.grey2};\r\n  border: none;\r\n  border-radius: 2px;\r\n  color: ${props => props.theme.colors.textPrimary};\r\n  height: ${props => props.height};\r\n  width: ${props => props.width};\r\n  line-height: 36px;\r\n  padding: 0 16px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  transition: background-color 0.2s ease-out;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${props => props.theme.colors.grey4};\r\n    transition: background-color 0.2s;\r\n  }\r\n  &:active {\r\n    background-color: ${props => props.theme.colors.grey6};\r\n    background-size: 100%;\r\n    transition: background 0s;\r\n  }\r\n`\r\n\r\nButton.defaultProps = defaultProps\r\n\r\nexport default Button\r\n","import styled from \"styled-components\"\r\nimport { flexbox } from \"styled-system\"\r\nimport Box from \"lib/primitives/Box\"\r\n\r\nconst Flex = styled(Box)`\r\n  ${flexbox};\r\n  display: flex;\r\n`\r\n\r\nFlex.displayName = \"Flex\"\r\n\r\nexport default Flex\r\n","import styled from \"styled-components\"\r\nimport { grid } from \"styled-system\"\r\nimport Box from \"lib/primitives/Box\"\r\n\r\nconst Grid = styled(Box)`\r\n  ${grid};\r\n  display: grid;\r\n`\r\n\r\nexport default Grid\r\n","import styled, { css } from \"styled-components\"\r\nimport { color, typography } from \"styled-system\"\r\nimport { string } from \"prop-types\"\r\n\r\nconst defaultProps = {\r\n  backgroundColor: \"grey2\"\r\n}\r\n\r\nconst propTypes = {\r\n  variant: string\r\n}\r\n\r\nconst NormalInputStyle = css`\r\n  border-bottom: solid 1px ${props => props.theme.colors.grey8};\r\n  height: 32px;\r\n  padding-left: 2px;\r\n  padding-right: 5px;\r\n`\r\n\r\nconst OutlinedInputStyle = css`\r\n  border-radius: 3px;\r\n  border: 1px solid ${props => props.theme.colors.grey8};\r\n  height: 42px;\r\n  padding: 6px 18px;\r\n  &:hover {\r\n    border-color: ${props => props.theme.colors.grey9};\r\n  }\r\n  &:focus {\r\n    border: solid 2px ${props => props.theme.colors.blue5};\r\n    outline: none;\r\n    padding: 5px 17px;\r\n  }\r\n`\r\n\r\nconst Input = styled.input`\r\n  ${color};\r\n  ${typography};\r\n  border: none;\r\n  ${props => props.variant && props.variant === \"normal\" && NormalInputStyle};\r\n  ${props =>\r\n    props.variant && props.variant === \"outlined\" && OutlinedInputStyle};\r\n  transition: all 100ms;\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n  outline: none;\r\n  ::placeholder {\r\n    color: ${props => props.theme.colors.grey10};\r\n  }\r\n  width: 100%;\r\n`\r\n\r\nInput.defaultProps = defaultProps\r\nInput.propTypes = propTypes\r\nInput.displayName = \"Input\"\r\n\r\nexport default Input\r\n","import { color, typography } from \"styled-system\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Text = styled.div`\r\n  ${color};\r\n  ${typography};\r\n`\r\n\r\nText.displayName = \"Text\"\r\n\r\nexport default Text\r\n","import Box from \"./Box\"\r\nimport Button from \"./Button\"\r\nimport Flex from \"./Flex\"\r\nimport Grid from \"./Grid\"\r\nimport Input from \"./Input\"\r\nimport Text from \"./Text\"\r\n\r\nexport default { Box, Button, Flex, Grid, Input, Text }\r\n","import styled from \"styled-components\"\r\nimport Primitives from \"lib/primitives\"\r\n\r\nexport const Example = styled(Primitives.Box)`\r\n  &:before {\r\n    content: \"''\";\r\n  }\r\n  &:after {\r\n    content: \"''\";\r\n  }\r\n  color: #aaaaaa;\r\n  font-size: 13px;\r\n  font-weight: 300;\r\n`\r\n\r\nexport const Synonyms = styled(Primitives.Box)`\r\n  margin-right: 3px;\r\n  color: #aaaaaa;\r\n  font-style: italic;\r\n`\r\n","import React from \"react\"\r\nimport Primitives from \"lib/primitives\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport { Example, Synonyms } from \"./styles\"\r\n\r\nconst Dictionary = ({ onChange, onClick, onSearch }) => {\r\n  return (\r\n    <Primitives.Flex\r\n      flexDirection={\"column\"}\r\n      margin={\"auto\"}\r\n      bg={\"white\"}\r\n      border={\"1px solid #DDDDDD\"}\r\n      borderRadius={\"8px\"}\r\n      width={[300, 400, 500, 600, 700]}\r\n      lineHeight={[0, 1, 2, 3, 4, 5]}\r\n    >\r\n      <Primitives.Text\r\n        fontSize={\"18px\"}\r\n        color={\"#545454\"}\r\n        style={{ textIndent: \"30px\", marginTop: \"15px\" }}\r\n      >\r\n        Dictionary\r\n      </Primitives.Text>\r\n      <Primitives.Flex pt={20} pl={20} pr={5}>\r\n        <Primitives.Input\r\n          style={{ width: \"100%\" }}\r\n          fontSize={1}\r\n          onChange={event => onChange(event.target.value)}\r\n        />\r\n        <Primitives.Button\r\n          boxShadow={\"0px\"}\r\n          alignSelf={\"flex-start\"}\r\n          fontSize={3}\r\n          onClick={() => onClick()}\r\n        >\r\n          <SearchIcon />\r\n        </Primitives.Button>\r\n      </Primitives.Flex>\r\n      <ul style={{ listStyle: \"disc\" }}>\r\n        {onSearch.map((word, index) => (\r\n          <div key={index}>\r\n            <Primitives.Text fontSize={\"18px\"} fontWeight={500}>\r\n              {word.word}\r\n            </Primitives.Text>\r\n            <Primitives.Text fontSize={\"15px\"} color={\"#AAAAAA\"}>\r\n              {word.phonetic}\r\n            </Primitives.Text>\r\n            <>\r\n              {word.meaning.noun && (\r\n                <Primitives.Text\r\n                  style={{ textIndent: \"-30px\" }}\r\n                  fontStyle={\"italic\"}\r\n                  lineHeight={[0, 1, 2, 3, 4, 5]}\r\n                >\r\n                  noun\r\n                </Primitives.Text>\r\n              )}\r\n            </>\r\n            {word.meaning.noun &&\r\n              word.meaning.noun.map((entry, index) => (\r\n                <div key={index}>\r\n                  <li style={{ fontSize: \"13px\" }}>{entry.definition}</li>\r\n                  {entry.example && <Example>{entry.example}</Example>}\r\n                  {entry.synonyms && (\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"13px\",\r\n                        color: \"#aaaaaa\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      synonyms:{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {entry.synonyms &&\r\n                    entry.synonyms.map((entry, index) => {\r\n                      return (\r\n                        <div style={{ display: \"inline-block\" }} key={index}>\r\n                          <Synonyms>\r\n                            {\r\n                              <Primitives.Text\r\n                                fontSize={[\"13px\"]}\r\n                                color={\"#1a0dab\"}\r\n                              >\r\n                                {entry + `, `}\r\n                              </Primitives.Text>\r\n                            }\r\n                          </Synonyms>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                </div>\r\n              ))}\r\n            <>\r\n              {word.meaning.verb && (\r\n                <Primitives.Text\r\n                  style={{ textIndent: \"-30px\" }}\r\n                  fontStyle={\"italic\"}\r\n                  lineHeight={[0, 1, 2, 3, 4, 5]}\r\n                >\r\n                  verb\r\n                </Primitives.Text>\r\n              )}\r\n            </>\r\n            {word.meaning.verb &&\r\n              word.meaning.verb.map((entry, index) => (\r\n                <div key={index}>\r\n                  <li style={{ fontSize: \"13px\" }}>{entry.definition}</li>\r\n                  {entry.example && <Example>{entry.example}</Example>}\r\n                  {entry.synonyms && (\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"13px\",\r\n                        color: \"#aaaaaa\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      synonyms:{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {entry.synonyms &&\r\n                    entry.synonyms.map((entry, index) => {\r\n                      return (\r\n                        <div style={{ display: \"inline-block\" }} key={index}>\r\n                          <Synonyms>\r\n                            {\r\n                              <Primitives.Text\r\n                                fontSize={[\"13px\"]}\r\n                                color={\"#1a0dab\"}\r\n                              >\r\n                                {entry + `, `}\r\n                              </Primitives.Text>\r\n                            }\r\n                          </Synonyms>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                </div>\r\n              ))}\r\n            <>\r\n              {word.meaning.adjective && (\r\n                <Primitives.Text\r\n                  style={{ textIndent: \"-30px\" }}\r\n                  fontStyle={\"italic\"}\r\n                  lineHeight={[0, 1, 2, 3, 4, 5]}\r\n                >\r\n                  adjective\r\n                </Primitives.Text>\r\n              )}\r\n            </>\r\n            {word.meaning.adjective &&\r\n              word.meaning.adjective.map((entry, index) => (\r\n                <div key={index}>\r\n                  <li style={{ fontSize: \"13px\" }}>{entry.definition}</li>\r\n                  {entry.example && <Example>{entry.example}</Example>}\r\n                  {entry.synonyms && (\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"13px\",\r\n                        color: \"#aaaaaa\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      synonyms:{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {entry.synonyms &&\r\n                    entry.synonyms.map((entry, index) => {\r\n                      return (\r\n                        <div style={{ display: \"inline-block\" }} key={index}>\r\n                          <Synonyms>\r\n                            {\r\n                              <Primitives.Text\r\n                                fontSize={[\"13px\"]}\r\n                                color={\"#1a0dab\"}\r\n                              >\r\n                                {entry + `, `}\r\n                              </Primitives.Text>\r\n                            }\r\n                          </Synonyms>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                </div>\r\n              ))}\r\n            <>\r\n              {word.meaning.adverb && (\r\n                <Primitives.Text\r\n                  style={{ textIndent: \"-30px\" }}\r\n                  fontStyle={\"italic\"}\r\n                  lineHeight={[0, 1, 2, 3, 4, 5]}\r\n                >\r\n                  adverb\r\n                </Primitives.Text>\r\n              )}\r\n            </>\r\n            {word.meaning.adverb &&\r\n              word.meaning.adverb.map((entry, index) => (\r\n                <div key={index}>\r\n                  <li style={{ fontSize: \"13px\" }}>{entry.definition}</li>\r\n                  {entry.example && <Example>{entry.example}</Example>}\r\n                  {entry.synonyms && (\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"13px\",\r\n                        color: \"#aaaaaa\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      synonyms:{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {entry.synonyms &&\r\n                    entry.synonyms.map((entry, index) => {\r\n                      return (\r\n                        <div style={{ display: \"inline-block\" }} key={index}>\r\n                          <Synonyms>\r\n                            {\r\n                              <Primitives.Text\r\n                                fontSize={[\"13px\"]}\r\n                                color={\"#1a0dab\"}\r\n                              >\r\n                                {entry + `, `}\r\n                              </Primitives.Text>\r\n                            }\r\n                          </Synonyms>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                </div>\r\n              ))}\r\n            <>\r\n              {word.meaning.abbreviation && (\r\n                <Primitives.Text\r\n                  style={{ textIndent: \"-30px\" }}\r\n                  fontStyle={\"italic\"}\r\n                  lineHeight={[0, 1, 2, 3, 4, 5]}\r\n                >\r\n                  abbreviation\r\n                </Primitives.Text>\r\n              )}\r\n            </>\r\n            {word.meaning.abbreviation &&\r\n              word.meaning.abbreviation.map((entry, index) => (\r\n                <div key={index}>\r\n                  <li style={{ fontSize: \"13px\" }}>{entry.definition}</li>\r\n                  {entry.example && <Example>{entry.example}</Example>}\r\n                  {entry.synonyms && (\r\n                    <span\r\n                      style={{\r\n                        fontSize: \"13px\",\r\n                        color: \"#aaaaaa\",\r\n                        fontStyle: \"italic\"\r\n                      }}\r\n                    >\r\n                      synonyms:{\" \"}\r\n                    </span>\r\n                  )}\r\n                  {entry.synonyms &&\r\n                    entry.synonyms.map((entry, index) => {\r\n                      return (\r\n                        <div style={{ display: \"inline-block\" }} key={index}>\r\n                          <Synonyms>\r\n                            {\r\n                              <Primitives.Text\r\n                                fontSize={[\"13px\"]}\r\n                                color={\"#1a0dab\"}\r\n                              >\r\n                                {entry + `, `}\r\n                              </Primitives.Text>\r\n                            }\r\n                          </Synonyms>\r\n                        </div>\r\n                      )\r\n                    })}\r\n                </div>\r\n              ))}\r\n          </div>\r\n        ))}\r\n      </ul>\r\n    </Primitives.Flex>\r\n  )\r\n}\r\n\r\nexport default Dictionary\r\n","import React, { Component } from \"react\"\r\nimport axios from \"axios\"\r\nimport Dictionary from \"../../components/Dictionary\"\r\n\r\nclass DictionaryContainer extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      wordresponse: [],\r\n      laungage: \"en\",\r\n      wordsearch: \"right\"\r\n    }\r\n  }\r\n\r\n  searchWord = () => {\r\n    const url =\r\n      \"https://dictionaryapi.herokuapp.com/?define=\" +\r\n      this.state.wordsearch +\r\n      \"&lang=\" +\r\n      this.state.laungage\r\n\r\n    axios\r\n      .get(url)\r\n      .then(response => response.data)\r\n      .then(data => {\r\n        this.setState({ wordresponse: data })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url =\r\n      \"https://dictionaryapi.herokuapp.com/?define=\" +\r\n      this.state.wordsearch +\r\n      \"&lang=\" +\r\n      this.state.laungage\r\n\r\n    axios\r\n      .get(url)\r\n      .then(response => response.data)\r\n      .then(data => {\r\n        this.setState({ wordresponse: data })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Dictionary\r\n          onClick={this.searchWord}\r\n          onChange={newSearch => this.setState({ wordsearch: newSearch })}\r\n          onSearch={this.state.wordresponse}\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DictionaryContainer\r\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport DictionaryContainer from './containers/DictionaryContainer/'\n\nconst App = () => (\n  <React.Fragment>\n    <Route exact path='/' component={DictionaryContainer}/>\n  </React.Fragment>\n)\n\nexport default App\n","import { createGlobalStyle, css } from \"styled-components\"\r\nimport { NoSelect } from \"styles/Helpers\"\r\n\r\nconst defaultFont = css`\r\n  font-family: \"Rubik\", sans-serif;\r\n  font-weight: 300;\r\n`\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  body {\r\n    padding: 0 !important;\r\n    margin: 0 !important;\r\n    ${defaultFont};\r\n  }\r\n  input {\r\n  padding: 0;\r\n    ${defaultFont};\r\n    ::placeholder {\r\n      ${NoSelect};\r\n    }\r\n  }\r\n  button, div, span, td {\r\n    ${defaultFont}\r\n  }\r\n`\r\n\r\nexport default GlobalStyles\r\n","const Colors = {\r\n  listItemColor: \"rgba(184, 199, 211, 0.3)\",\r\n  listItemColorLight: \"rgba(200, 215, 227, 0.3)\",\r\n  textPrimary: \"#282828\",\r\n\r\n  white: \"#fff\",\r\n  black: \"#000\",\r\n\r\n  red1: \"#ffcdd2\",\r\n  red2: \"#ef9a9a\",\r\n  red3: \"#e57373\",\r\n  red4: \"#ef5350\",\r\n  red5: \"#f44336\",\r\n  red6: \"#e53935\",\r\n  red7: \"#d32f2f\",\r\n  red8: \"#c62828\",\r\n  red9: \"#b71c1c\",\r\n\r\n  purple1: \"#d1c4e9\",\r\n  purple2: \"#b39ddb\",\r\n  purple3: \"#9575cd\",\r\n  purple4: \"#7e57c2\",\r\n  purple5: \"#673ab7\",\r\n  purple6: \"#5e35b1\",\r\n  purple7: \"#512da8\",\r\n  purple8: \"#4527a0\",\r\n  purple9: \"#311b92\",\r\n\r\n  orange1: \"#ffe0b2\",\r\n  orange2: \"#ffcc80\",\r\n  orange3: \"#ffb74d\",\r\n  orange4: \"#ffa726\",\r\n  orange5: \"#ff9800\",\r\n  orange6: \"#fb8c00\",\r\n  orange7: \"#f57c00\",\r\n  orange8: \"#ef6c00\",\r\n  orange9: \"#e65100\",\r\n\r\n  blue1: \"#bbdefb\",\r\n  blue2: \"#90caf9\",\r\n  blue3: \"#64b5f6\",\r\n  blue4: \"#42a5f5\",\r\n  blue5: \"#2196f3\",\r\n  blue6: \"#1e88e5\",\r\n  blue7: \"#1976d2\",\r\n  blue8: \"#1565c0\",\r\n  blue9: \"#0d47a1\",\r\n\r\n  green1: \"#c8e6c9\",\r\n  green2: \"#a5d6a7\",\r\n  green3: \"#81c784\",\r\n  green4: \"#66bb6a\",\r\n  green5: \"#4caf50\",\r\n  green6: \"#43a047\",\r\n  green7: \"#388e3c\",\r\n  green8: \"#2e7d32\",\r\n  green9: \"#1b5e20\",\r\n\r\n  grey1: \"#fcfcfc\",\r\n  grey2: \"#fafafa\",\r\n  grey3: \"#f6f6f6\",\r\n  grey4: \"#f3f3f3\",\r\n  grey5: \"#f1f1f1\",\r\n  grey6: \"#eeeeee\",\r\n  grey7: \"#e0e0e0\",\r\n  grey8: \"#bdbdbd\",\r\n  grey9: \"#9e9e9e\",\r\n  grey10: \"#8a8a8a\",\r\n  grey11: \"#757575\",\r\n  grey12: \"#616161\",\r\n  grey13: \"#424242\"\r\n}\r\n\r\nexport default Colors\r\n","import Colors from \"./Colors\"\r\n\r\nconst breakpoints = [\"550px\", \"950px\", \"1200px\", \"1440px\", \"1800px\"]\r\nconst fontSizes = [\"14px\", \"16px\", \"20px\", \"25px\", \"31.25px\", \"39.06px\"]\r\nconst lineHeights = [\r\n  \"18.2px\",\r\n  \"20.8px\",\r\n  \"26px\",\r\n  \"32.5104px\",\r\n  \"40.6224px\",\r\n  \"50.7728px\"\r\n]\r\nconst shadows = [\r\n  \"0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.05)\",\r\n  \"0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.20)\",\r\n  \"0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 3px 3px -2px rgba(0, 0, 0, 0.12), 0 1px 8px 0 rgba(0, 0, 0, 0.20)\"\r\n]\r\nconst space = [0, 8, 16, 24, 32, 40, 48, 64]\r\n\r\nconst Theme = {\r\n  breakpoints,\r\n  colors: {\r\n    ...Colors,\r\n    primary: Colors.blue4,\r\n    success: Colors.green6,\r\n    warning: Colors.orange5,\r\n    error: Colors.red7\r\n  },\r\n  fontFamily: \"'Open Sans', sans-serif\",\r\n  fontSizes,\r\n  lineHeights,\r\n  shadows,\r\n  space\r\n}\r\n\r\nexport default Theme\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport { HashRouter } from \"react-router-dom\"\nimport \"./index.css\"\nimport GlobalStyle from \"styles/GlobalStyle\"\nimport { ThemeProvider } from \"styled-components\"\nimport Theme from \"styles\"\n\nReactDOM.render(\n    <HashRouter>\n      <ThemeProvider theme={Theme}>\n        <React.Fragment>\n          <App />\n          <GlobalStyle />\n        </React.Fragment>\n      </ThemeProvider>\n    </HashRouter>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}